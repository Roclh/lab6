package com.commands.allCommands;

import com.classes.WorkSpace;
import com.classes.serverSide.CommandProcessingModule;
import com.commands.Command;
import com.wrappers.UserCommand;

public class Help extends Command {
    public Help() {
        super("help");
    }

    @Override
    public void execute(){
        UserCommand userCommand = WorkSpace.getUserCommand();
        if(userCommand.getArg1().equals("")) {
            System.out.println("===================================================================================");
            System.out.println("\"help command\" - вывести подробную справку о конкретной комманде");
            System.out.println("\"info\" - вывести информацию о коллекции");
            System.out.println("\"show\" - вывести все элементы коллекции в строковом представлении");
            System.out.println("\"add {element}\" - добавить новый элемент в коллекцию");
            System.out.println("\"update_id {element}\" - изменить элемент коллекции, чей id равен заданному");
            System.out.println("\"remove_by_id id\" - удалить элемент из коллекции, чей id равен заданному");
            System.out.println("\"clear\" - отчистить коллекцию");
            System.out.println("\"save\" - сохранить коллекцию в файл");
            System.out.println("\"execute_script file_name\" - считать и исполнить скрипт из указанного файла.");
            System.out.println("\"exit\" - закрыть программу");
            System.out.println("\"add_if_min {element}\" - добавить новый элемент в коллекцию, если его значение\nменьше, чем у наименьшего элемента этой коллекции");
            System.out.println("\"remove_lower {element}\" - удалить все элементы, меньшие, чем заданный");
            System.out.println("\"history\" - вывести последние 6 комманд");
            System.out.println("\"count_by_hair_color hairColor\" - вывести количество элементов с данным цветом волос");
            System.out.println("\"filter_starts_with_name name\" - вывести элементы, значения поля name которых \nначинается с заданной подстроки");
            System.out.println("\"print_unique_height height\" - вывести все уникальнын значения поля height");
            System.out.println("===================================================================================");
        }
        else if(!userCommand.getArg1().equals("")&&userCommand.getArg2().equals("")){
            String ans = "";

            switch (userCommand.getArg1()) {
                case "info":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Данная команда выводит общую информацию о коллекции, а именно:\n";
                    ans = ans +"Объекты, хранимые в коллекции\n";
                    ans = ans +"Тип коллекции\n";
                    ans = ans +"Количество элементов коллекции\n";
                    ans = ans +"Имя каждого элемента коллекции + его id\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "show":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Выводит информацию о каждом объекте, хранимом в коллекции в формате Json\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "add":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Имеет два варианта работы: \n";
                    ans = ans +"1. Вариант работы без аргумента: \n";
                    ans = ans +"Программа будет построчно просить ввести каждый элемент обхекта Person\n";
                    ans = ans +"2. Вариант с аргументом строки, записанном в формате json\n";
                    ans = ans +"Программа будет ожидать от пользователя ввода вида \n";
                    ans = ans +"add {\"name\":\"Степан\";\"coordinates\":{\"X\":\"123\";\"Y\":\"3234\";....;}\n";
                    ans = ans +"Вводится в данном виде могут быть любые параметры объекта Person в любом порядке\n";
                    ans = ans +"Любые параметры, которые не будут записаны, будут созданны автоматически случайным образом\n";
                    ans = ans +"=================================================================\n";
                    ans = ans +"Некоторые параметры имеют ограниченное количество возможных вариантов ввода\n";
                    ans = ans +"Параметр hairColor может принимать значения:\n";
                    ans = ans +"GREEN, BLACK, PINK, YELLOW, ORANGE, WHITE\n";
                    ans = ans +"Параметр eyeColor может принимать значения:\n";
                    ans = ans +"RED, BLUE, YELLOW\n";
                    ans = ans +"Параметр nationality может принимать значения\n";
                    ans = ans +"INDIA, VATICAN, NORTH_AMERICA, JAPAN\n";
                    ans = ans +"Параметр height не может быть отрицательным\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "update":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда ожидает на вход два аргумента\n";
                    ans = ans +"Первый аргумент хранит в себе id элемента\n";
                    ans = ans +"Второй аргумент хранит параметры, которые нужно изменить\n";
                    ans = ans +"     Пример работающией строки:\n";
                    ans = ans +"update 123456 {\"name\":\"Степан\";}\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "remove_by_id":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда ожидает на вход один аргумент\n";
                    ans = ans +"Аргумент должен хранить в себе id существующего объекта коллекции\n";
                    ans = ans +"Для удобства удаления рекомендуется использовать в комбинации с\nкомандой info\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "clear":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Удаляет все элементы коллекции\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "save":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Сохраняет все элементы коллекции в читаемый файл в формате json\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "execute_script":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда ожидает на вход один аргумент\n";
                    ans = ans +"Аргумент должен хранить в себе полный или относительный путь до файла скрипта\n";
                    ans = ans +"Пользователь должен иметь нужные права доступа для чтения файла\n";
                    ans = ans +"Для удобства, несколько примеров скриптов находятся в папке files/\n";
                    ans = ans +"Скрипт может исполнять другие скрипты, но для избежания рекурсии \n";
                    ans = ans +"если скрипт исполняет сам себя, или скрипт исполняет другой скрипт, в \n";
                    ans = ans +"который вложен этот скрипт, то исполнение команды будет проигнорированно\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "exit":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда завершает работу программы\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "add_if_min":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда добавляет элемент в коллекцию, если он меньше остальных элементов\n";
                    ans = ans +"Команда ожидает на вход параметр в формате json, см \"help add\"\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "remove_lower":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда удаляет все элементы коллекции, если они меньше, чем заданный\n";
                    ans = ans +"Команда ождиает на вхож параметр в формате json, см \"help add\"\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "history":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда возращает последние 6 команд, которые пользователь пытался ввести\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "count_by_hair_color":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда возвращает число объектов, у которых параметр hairColor равен заданному\n";
                    ans = ans +"Возможные значения hairColor:\n";
                    ans = ans +"GREEN, BLACK, PINK, YELLOW, ORANGE, WHITE\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "filter_starts_with_name":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда ожидает на вход подстроку, которую программа будет искать в начале\n";
                    ans = ans +"имен объектов коллекции\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "print_unique_height":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда ожидает на вход положительное число\n";
                    ans = ans +"Программа вернет все имена обънетоа, у которых параметр height уникален\n";
                    ans = ans +"=================================================================\n";
                    System.out.println(ans);
                    break;
                case "helpImPetr":
                    ans = ans +"САСИ БАЛЬШИЕ ПЕНИСЫ УБЛЮДАК\n";
                    System.out.println(ans);
                    break;
                default:
                    ans = ans +"Неправельно введено название команды\n";
                    ans = ans +"Необходимо ввести только первое слово команды без аргументов!\n";
                    System.out.println(ans);
                    break;
            }
        }else System.out.println("В этой команде нету 3 аргумента");
    }

    @Override
    public String serverExecute() {
        UserCommand userCommand = CommandProcessingModule.getCPMCommand();
        String ans = "";
        if(userCommand.getArg1().equals("")) {
            ans = ans+ ("===================================================================================\n");
            ans = ans+ ("\"help command\" - вывести подробную справку о конкретной комманде\n");
            ans = ans+ ("\"info\" - вывести информацию о коллекции\n");
            ans = ans+ ("\"show\" - вывести все элементы коллекции в строковом представлении\n");
            ans = ans+ ("\"add {element}\" - добавить новый элемент в коллекцию\n");
            ans = ans+ ("\"update id {element}\" - изменить элемент коллекции, чей id равен заданному\n");
            ans = ans+ ("\"remove_by_id id\" - удалить элемент из коллекции, чей id равен заданному\n");
            ans = ans+ ("\"clear\" - очистить коллекцию\n");
            ans = ans+ ("\"save\" - сохранить коллекцию в файл\n");
            ans = ans+ ("\"execute_script file_name\" - считать и исполнить скрипт из указанного файла.\n");
            ans = ans+ ("\"exit\" - закрыть программу\n");
            ans = ans+ ("\"add_if_min {element}\" - добавить новый элемент в коллекцию, если его значение\nменьше, чем у наименьшего элемента этой коллекции\n");
            ans = ans+ ("\"remove_lower {element}\" - удалить все элементы, меньшие, чем заданный\n");
            ans = ans+ ("\"history\" - вывести последние 6 комманд\n");
            ans = ans+ ("\"count_by_hair_color hairColor\" - вывести количество элементов с данным цветом волос\n");
            ans = ans+ ("\"filter_starts_with_name name\" - вывести элементы, значения поля name которых \nначинается с заданной подстроки\n");
            ans = ans+ ("\"print_unique_height height\" - вывести все уникальнын значения поля height\n");
            ans = ans+ ("===================================================================================\n");
            return ans;
        }
        else if(!userCommand.getArg1().equals("")&&userCommand.getArg2().equals("")){
            switch (userCommand.getArg1()) {
                case "info":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Данная команда выводит общую информацию о коллекции, а именно:\n";
                    ans = ans +"Объекты, хранимые в коллекции\n";
                    ans = ans +"Тип коллекции\n";
                    ans = ans +"Количество элементов коллекции\n";
                    ans = ans +"Имя каждого элемента коллекции + его id\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "show":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Выводит информацию о каждом объекте, хранимом в коллекции в формате Json\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "add":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Имеет два варианта работы: \n";
                    ans = ans +"1. Вариант работы без аргумента: \n";
                    ans = ans +"Программа будет построчно просить ввести каждый элемент обхекта Person\n";
                    ans = ans +"2. Вариант с аргументом строки, записанном в формате json\n";
                    ans = ans +"Программа будет ожидать от пользователя ввода вида \n";
                    ans = ans +"add {\"name\":\"Степан\";\"coordinates\":{\"X\":\"123\";\"Y\":\"3234\";....;}\n";
                    ans = ans +"Вводится в данном виде могут быть любые параметры объекта Person в любом порядке\n";
                    ans = ans +"Любые параметры, которые не будут записаны, будут созданны автоматически случайным образом\n";
                    ans = ans +"=================================================================\n";
                    ans = ans +"Некоторые параметры имеют ограниченное количество возможных вариантов ввода\n";
                    ans = ans +"Параметр hairColor может принимать значения:\n";
                    ans = ans +"GREEN, BLACK, PINK, YELLOW, ORANGE, WHITE\n";
                    ans = ans +"Параметр eyeColor может принимать значения:\n";
                    ans = ans +"RED, BLUE, YELLOW\n";
                    ans = ans +"Параметр nationality может принимать значения\n";
                    ans = ans +"INDIA, VATICAN, NORTH_AMERICA, JAPAN\n";
                    ans = ans +"Параметр height не может быть отрицательным\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "update":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда ожидает на вход два аргумента\n";
                    ans = ans +"Первый аргумент хранит в себе id элемента\n";
                    ans = ans +"Второй аргумент хранит параметры, которые нужно изменить\n";
                    ans = ans +"     Пример работающией строки:\n";
                    ans = ans +"update 123456 {\"name\":\"Степан\";}\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "remove_by_id":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда ожидает на вход один аргумент\n";
                    ans = ans +"Аргумент должен хранить в себе id существующего объекта коллекции\n";
                    ans = ans +"Для удобства удаления рекомендуется использовать в комбинации с\nкомандой info\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "clear":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Удаляет все элементы коллекции\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "save":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Сохраняет все элементы коллекции в читаемый файл в формате json\n";
                    ans = ans +"Работает только на сервере.\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "execute_script":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда ожидает на вход один аргумент\n";
                    ans = ans +"Аргумент должен хранить в себе полный или относительный путь до файла скрипта\n";
                    ans = ans +"Пользователь должен иметь нужные права доступа для чтения файла\n";
                    ans = ans +"Для удобства, несколько примеров скриптов находятся в папке files/\n";
                    ans = ans +"Скрипт может исполнять другие скрипты, но для избежания рекурсии \n";
                    ans = ans +"если скрипт исполняет сам себя, или скрипт исполняет другой скрипт, в \n";
                    ans = ans +"который вложен этот скрипт, то исполнение команды будет проигнорированно\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "exit":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда завершает работу программы\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "add_if_min":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда добавляет элемент в коллекцию, если он меньше остальных элементов\n";
                    ans = ans +"Команда ожидает на вход параметр в формате json, см \"help add\"\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "remove_lower":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда удаляет все элементы коллекции, если они меньше, чем заданный\n";
                    ans = ans +"Команда ождиает на вхож параметр в формате json, см \"help add\"\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "history":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда возращает последние 6 команд, которые пользователь пытался ввести\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "count_by_hair_color":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда возвращает число объектов, у которых параметр hairColor равен заданному\n";
                    ans = ans +"Возможные значения hairColor:\n";
                    ans = ans +"GREEN, BLACK, PINK, YELLOW, ORANGE, WHITE\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "filter_starts_with_name":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда ожидает на вход подстроку, которую программа будет искать в начале\n";
                    ans = ans +"имен объектов коллекции\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "print_unique_height":
                    ans = ans +"=================================================================\n";
                    ans = ans +"Команда ожидает на вход положительное число\n";
                    ans = ans +"Программа вернет все имена обънетоа, у которых параметр height уникален\n";
                    ans = ans +"=================================================================\n";
                    return ans;
                case "helpImPetr":
                    ans = ans +"САСИ БАЛЬШИЕ ПЕНИСЫ УБЛЮДАК\n";
                    return ans;
                default:
                    ans = ans +"Неправильно введено название команды\n";
                    ans = ans +"Необходимо ввести только первое слово команды без аргументов!\n";
                    return ans;
            }
        }else return ("В этой команде нету 3 аргумента\n");
    }
}
